name: FaaS Release

on:
  push:
    tags:
      - '*'

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Rust
        run: |
          rustup toolchain install stable
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu

      - name: Install Other Dependencies
        run: |
          sudo apt-get install -y curl clang pkg-config libssl-dev libfmt-dev protobuf-compiler containerd.io iptables iproute2 gcc-x86-64-linux-gnu gcc-aarch64-linux-gnu

      # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
      - name: Restore Build Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-release
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Release (amd64)
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Upload Release (amd64) Binaries
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: faas-release-amd64
          path: |
            target/x86_64-unknown-linux-gnu/release/api
            target/x86_64-unknown-linux-gnu/release/bismuthctl
            target/x86_64-unknown-linux-gnu/release/bismuthd
            target/x86_64-unknown-linux-gnu/release/bismuthfe
            target/x86_64-unknown-linux-gnu/release/svcprovider

      - name: Build Release (arm64)
        run: |
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc \
            RUSTFLAGS='-C link-arg=-Wl,-rpath-link=/tmp/link/libfmt8/usr/lib/aarch64-linux-gnu -L/tmp/link/fdb/usr/lib' \
            cargo build --release --target aarch64-unknown-linux-gnu

      - name: Upload Release (arm64) Binaries
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: faas-release-arm64
          path: |
            target/aarch64-unknown-linux-gnu/release/api
            target/aarch64-unknown-linux-gnu/release/bismuthctl
            target/aarch64-unknown-linux-gnu/release/bismuthd
            target/aarch64-unknown-linux-gnu/release/bismuthfe
            target/aarch64-unknown-linux-gnu/release/svcprovider

      - name: Save Build Cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-release
